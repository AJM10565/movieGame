Great choice! The TMDb API is a robust and reliable data source for movie information. Here's some starter code for your movie guessing game using Python for the back-end, and JavaScript, HTML, and CSS for the front-end.

Python (using Flask and tmdbv3api):

```python
from flask import Flask, jsonify, request
from tmdbv3api import TMDb, Movie

app = Flask(__name__)

tmdb = TMDb()
tmdb.api_key = 'YOUR_API_KEY'

@app.route('/get_quote', methods=['GET'])
def get_quote():
    movie_id = request.args.get('movie_id')
    movie = Movie()
    movie_details = movie.details(movie_id)

    # TODO: Select a random quote from the movie
    quote = "Selected quote here"

    return jsonify(quote=quote)

@app.route('/check_guess', methods=['POST'])
def check_guess():
    guess = request.json['guess']
    movie_id = request.json['movie_id']

    movie = Movie()
    movie_details = movie.details(movie_id)

    if guess.lower() == movie_details['title'].lower():
        return jsonify(correct=True)
    else:
        return jsonify(correct=False)

if __name__ == '__main__':
    app.run()
```

JavaScript (using Axios for API calls):

```javascript
const movieIdInput = document.getElementById('movie-id');
const quoteDisplay = document.getElementById('quote');
const guessInput = document.getElementById('guess');
const resultDisplay = document.getElementById('result');

async function getQuote() {
    const movieId = movieIdInput.value;
    const response = await axios.get(`/get_quote?movie_id=${movieId}`);
    quoteDisplay.textContent = response.data.quote;
}

async function checkGuess() {
    const movieId = movieIdInput.value;
    const guess = guessInput.value;
    const response = await axios.post('/check_guess', {guess: guess, movie_id: movieId});

    if (response.data.correct) {
        resultDisplay.textContent = 'Correct!';
    } else {
        resultDisplay.textContent = 'Wrong. Try again.';
    }
}
```

HTML:

```html
<!DOCTYPE html>
<html>
<head>
    <title>Movie Guessing Game</title>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <link rel="stylesheet" type="text/css" href="styles.css">
</head>
<body>
    <input type="text" id="movie-id" placeholder="Enter TMDb Movie ID">
    <button onclick="getQuote()">Get Quote</button>
    <div id="quote"></div>
    <input type="text" id="guess" placeholder="Guess the movie">
    <button onclick="checkGuess()">Check Guess</button>
    <div id="result"></div>

    <script src="script.js"></script>
</body>
</html>
```

CSS (in styles.css):

```css
body {
    font-family: Arial, sans-serif;
}

input {
    margin: 10px;
    padding: 5px;
}

button {
    margin: 10px;
    padding: 5px 10px;
    background-color: #4CAF50;
    color: white;
    border: none;
    cursor: pointer;
}

#quote, #result {
    margin: 10px;
    padding: 10px;
    background-color: #f1f1f1;
}
```

This is a basic setup to get you started. You'll need to fill in the details, like selecting a random quote from the movie data you get back from TMDb, handling multiple guesses, displaying hints, etc.

Remember to replace 'YOUR_API_KEY' with your actual TMDb API key.

Also, this code assumes you're serving the HTML, CSS, and JavaScript from the same server as your Python Flask app. If you're using a separate server for the front-end, you'll need to adjust the URLs in the JavaScript Axios calls.

Happy coding!